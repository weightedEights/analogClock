;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2/1/2014 1:01:40 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF5E  	GOTO        700
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_I2C1_Is_Idle:
;__Lib_I2C_c34b12.c,34 :: 		
;__Lib_I2C_c34b12.c,35 :: 		
0x001C	0xB4C7      	BTFSC       SSPSTAT, 2 
0x001E	0xD009      	BRA         L_I2C1_Is_Idle0
;__Lib_I2C_c34b12.c,36 :: 		
0x0020	0x0E1F      	MOVLW       31
0x0022	0x14C5      	ANDWF       SSP1CON2, 0 
0x0024	0x6E01      	MOVWF       R1 
0x0026	0x5001      	MOVF        R1, 0 
0x0028	0x0A00      	XORLW       0
0x002A	0xE103      	BNZ         L_I2C1_Is_Idle1
;__Lib_I2C_c34b12.c,37 :: 		
0x002C	0x0E01      	MOVLW       1
0x002E	0x6E00      	MOVWF       R0 
0x0030	0xD001      	BRA         L_end_I2C1_Is_Idle
L_I2C1_Is_Idle1:
L_I2C1_Is_Idle0:
;__Lib_I2C_c34b12.c,38 :: 		
0x0032	0x6A00      	CLRF        R0 
;__Lib_I2C_c34b12.c,39 :: 		
L_end_I2C1_Is_Idle:
0x0034	0x0012      	RETURN      0
; end of _I2C1_Is_Idle
_I2C1_Stop:
;__Lib_I2C_c34b12.c,111 :: 		
;__Lib_I2C_c34b12.c,112 :: 		
0x0036	0x84C5      	BSF         SSP1CON2, 2 
;__Lib_I2C_c34b12.c,113 :: 		
L_end_I2C1_Stop:
0x0038	0x0012      	RETURN      0
; end of _I2C1_Stop
_I2C1_Wr:
;__Lib_I2C_c34b12.c,89 :: 		
;__Lib_I2C_c34b12.c,91 :: 		
0x003A	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_c34b12.c,92 :: 		
0x003C	0xFFC9C037  	MOVFF       FARG_I2C1_Wr_data_, SSP1BUF
;__Lib_I2C_c34b12.c,94 :: 		
L_I2C1_Wr18:
0x0040	0xA4C7      	BTFSS       SSPSTAT, 2 
0x0042	0xD001      	BRA         L_I2C1_Wr19
;__Lib_I2C_c34b12.c,95 :: 		
0x0044	0xD7FD      	BRA         L_I2C1_Wr18
L_I2C1_Wr19:
;__Lib_I2C_c34b12.c,97 :: 		
L_I2C1_Wr20:
0x0046	0xB69E      	BTFSC       PIR1, 3 
0x0048	0xD001      	BRA         L_I2C1_Wr21
;__Lib_I2C_c34b12.c,98 :: 		
0x004A	0xD7FD      	BRA         L_I2C1_Wr20
L_I2C1_Wr21:
;__Lib_I2C_c34b12.c,101 :: 		
0x004C	0xBCC5      	BTFSC       SSP1CON2, 6 
0x004E	0xD002      	BRA         L_I2C1_Wr22
;__Lib_I2C_c34b12.c,102 :: 		
0x0050	0x6A00      	CLRF        R0 
0x0052	0xD003      	BRA         L_end_I2C1_Wr
;__Lib_I2C_c34b12.c,103 :: 		
L_I2C1_Wr22:
;__Lib_I2C_c34b12.c,105 :: 		
0x0054	0x84C5      	BSF         SSP1CON2, 2 
;__Lib_I2C_c34b12.c,106 :: 		
0x0056	0x0E02      	MOVLW       2
0x0058	0x6E00      	MOVWF       R0 
;__Lib_I2C_c34b12.c,108 :: 		
L_end_I2C1_Wr:
0x005A	0x0012      	RETURN      0
; end of _I2C1_Wr
_I2C1_Start:
;__Lib_I2C_c34b12.c,41 :: 		
;__Lib_I2C_c34b12.c,44 :: 		
0x005C	0x6A37      	CLRF        I2C1_Start_j_L0 
0x005E	0x6A38      	CLRF        I2C1_Start_j_L0+1 
L_I2C1_Start2:
0x0060	0x5038      	MOVF        I2C1_Start_j_L0+1, 0 
0x0062	0x0812      	SUBLW       18
0x0064	0xE102      	BNZ         L__I2C1_Start51
0x0066	0x5037      	MOVF        I2C1_Start_j_L0, 0 
0x0068	0x088E      	SUBLW       142
L__I2C1_Start51:
0x006A	0xE307      	BNC         L_I2C1_Start3
;__Lib_I2C_c34b12.c,45 :: 		
0x006C	0xDFD7      	RCALL       _I2C1_Is_Idle
0x006E	0x5200      	MOVF        R0, 1 
0x0070	0xE001      	BZ          L_I2C1_Start5
;__Lib_I2C_c34b12.c,46 :: 		
0x0072	0xD003      	BRA         L_I2C1_Start3
L_I2C1_Start5:
;__Lib_I2C_c34b12.c,44 :: 		
0x0074	0x4A37      	INFSNZ      I2C1_Start_j_L0, 1 
0x0076	0x2A38      	INCF        I2C1_Start_j_L0+1, 1 
;__Lib_I2C_c34b12.c,47 :: 		
0x0078	0xD7F3      	BRA         L_I2C1_Start2
L_I2C1_Start3:
;__Lib_I2C_c34b12.c,49 :: 		
0x007A	0x0E12      	MOVLW       18
0x007C	0x5C38      	SUBWF       I2C1_Start_j_L0+1, 0 
0x007E	0xE102      	BNZ         L__I2C1_Start52
0x0080	0x0E8F      	MOVLW       143
0x0082	0x5C37      	SUBWF       I2C1_Start_j_L0, 0 
L__I2C1_Start52:
0x0084	0xE303      	BNC         L_I2C1_Start6
;__Lib_I2C_c34b12.c,50 :: 		
0x0086	0x0E7B      	MOVLW       123
0x0088	0x6E00      	MOVWF       R0 
0x008A	0xD005      	BRA         L_end_I2C1_Start
L_I2C1_Start6:
;__Lib_I2C_c34b12.c,52 :: 		
0x008C	0x80C5      	BSF         SSP1CON2, 0 
;__Lib_I2C_c34b12.c,53 :: 		
L_I2C1_Start8:
0x008E	0xA0C5      	BTFSS       SSP1CON2, 0 
0x0090	0xD001      	BRA         L_I2C1_Start9
;__Lib_I2C_c34b12.c,54 :: 		
0x0092	0xD7FD      	BRA         L_I2C1_Start8
L_I2C1_Start9:
;__Lib_I2C_c34b12.c,55 :: 		
0x0094	0x6A00      	CLRF        R0 
;__Lib_I2C_c34b12.c,57 :: 		
L_end_I2C1_Start:
0x0096	0x0012      	RETURN      0
; end of _I2C1_Start
_PWM1_Init:
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
;__Lib_PWM_c21.c,38 :: 		
0x0098	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,39 :: 		
0x009A	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,40 :: 		
0x009C	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,41 :: 		
L_end_PWM1_Init:
0x009E	0x0012      	RETURN      0
; end of _PWM1_Init
_writeRTC:
;analogClock.c,37 :: 		void writeRTC(unsigned short address,unsigned short w_data){
;analogClock.c,39 :: 		I2C1_Start();                       // issue I2C start signal
0x00A0	0xDFDD      	RCALL       _I2C1_Start
;analogClock.c,40 :: 		I2C1_Wr(0xD0);                      // send byte via I2C (device address + W)
0x00A2	0x0ED0      	MOVLW       208
0x00A4	0x6E37      	MOVWF       FARG_I2C1_Wr_data_ 
0x00A6	0xDFC9      	RCALL       _I2C1_Wr
;analogClock.c,41 :: 		I2C1_Wr(address);                   // send byte (address of DS1307 location)
0x00A8	0xF037C033  	MOVFF       FARG_writeRTC_address, FARG_I2C1_Wr_data_
0x00AC	0xDFC6      	RCALL       _I2C1_Wr
;analogClock.c,42 :: 		I2C1_Wr(w_data);                    // send data (data to be written)
0x00AE	0xF037C034  	MOVFF       FARG_writeRTC_w_data, FARG_I2C1_Wr_data_
0x00B2	0xDFC3      	RCALL       _I2C1_Wr
;analogClock.c,43 :: 		I2C1_Stop();                        // issue I2C stop signal
0x00B4	0xDFC0      	RCALL       _I2C1_Stop
;analogClock.c,44 :: 		}
L_end_writeRTC:
0x00B6	0x0012      	RETURN      0
; end of _writeRTC
_Mul_16x16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x00B8	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x00BA	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x00BC	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x00BE	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x00C0	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x00C2	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x00C6	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x00CA	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x00CC	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x00CE	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x00D2	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x00D6	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x00D8	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x00DA	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x00DC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x00DE	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x00E0	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x00E2	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x00E4	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x00E6	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x00E8	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x00EA	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x00EC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x00EE	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x00F0	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x00F2	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x00F4	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x00F6	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x00FA	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x00FE	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0102	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16x16_U:
0x0106	0x0012      	RETURN      0
; end of _Mul_16x16_U
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x0108	0x6A67      	CLRF        CCPR2L 
;__Lib_PWM_c21.c,4 :: 		
0x010A	0x9866      	BCF         CCP2CON, 4 
;__Lib_PWM_c21.c,5 :: 		
0x010C	0x9A66      	BCF         CCP2CON, 5 
;__Lib_PWM_c21.c,6 :: 		
L_end_PWM2_Init:
0x010E	0x0012      	RETURN      0
; end of _PWM2_Init
_I2C1_Init:
;__Lib_I2C_c34b12.c,9 :: 		
;__Lib_I2C_c34b12.c,16 :: 		
0x0110	0x9894      	BCF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_I2C_c34b12.c,17 :: 		
0x0112	0x9694      	BCF         TRISC3_bit, BitPos(TRISC3_bit+0) 
;__Lib_I2C_c34b12.c,20 :: 		
0x0114	0x988B      	BCF         LATC4_bit, BitPos(LATC4_bit+0) 
;__Lib_I2C_c34b12.c,21 :: 		
0x0116	0x968B      	BCF         LATC3_bit, BitPos(LATC3_bit+0) 
;__Lib_I2C_c34b12.c,24 :: 		
0x0118	0x8894      	BSF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_I2C_c34b12.c,25 :: 		
0x011A	0x8694      	BSF         TRISC3_bit, BitPos(TRISC3_bit+0) 
;__Lib_I2C_c34b12.c,27 :: 		
0x011C	0x9EC7      	BCF         SSP1STAT, 7 
;__Lib_I2C_c34b12.c,28 :: 		
0x011E	0x9CC7      	BCF         SSP1STAT, 6 
;__Lib_I2C_c34b12.c,29 :: 		
0x0120	0x0E38      	MOVLW       56
0x0122	0x6EC6      	MOVWF       SSP1CON1 
;__Lib_I2C_c34b12.c,32 :: 		
L_end_I2C1_Init:
0x0124	0x0012      	RETURN      0
; end of _I2C1_Init
_I2C1_Rd:
;__Lib_I2C_c34b12.c,65 :: 		
;__Lib_I2C_c34b12.c,68 :: 		
0x0126	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_c34b12.c,69 :: 		
0x0128	0x86C5      	BSF         SSP1CON2, 3 
;__Lib_I2C_c34b12.c,71 :: 		
L_I2C1_Rd12:
0x012A	0xB69E      	BTFSC       PIR1, 3 
0x012C	0xD001      	BRA         L_I2C1_Rd13
;__Lib_I2C_c34b12.c,72 :: 		
0x012E	0xD7FD      	BRA         L_I2C1_Rd12
L_I2C1_Rd13:
;__Lib_I2C_c34b12.c,74 :: 		
0x0130	0xF001CFC9  	MOVFF       SSP1BUF, R1
;__Lib_I2C_c34b12.c,75 :: 		
0x0134	0x5033      	MOVF        FARG_I2C1_Rd_ack, 0 
0x0136	0x0A00      	XORLW       0
0x0138	0xE102      	BNZ         L_I2C1_Rd14
;__Lib_I2C_c34b12.c,76 :: 		
0x013A	0x8AC5      	BSF         SSP1CON2, 5 
0x013C	0xD001      	BRA         L_I2C1_Rd15
L_I2C1_Rd14:
;__Lib_I2C_c34b12.c,78 :: 		
0x013E	0x9AC5      	BCF         SSP1CON2, 5 
L_I2C1_Rd15:
;__Lib_I2C_c34b12.c,80 :: 		
0x0140	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_c34b12.c,81 :: 		
0x0142	0x88C5      	BSF         SSP1CON2, 4 
;__Lib_I2C_c34b12.c,83 :: 		
L_I2C1_Rd16:
0x0144	0xB69E      	BTFSC       PIR1, 3 
0x0146	0xD001      	BRA         L_I2C1_Rd17
;__Lib_I2C_c34b12.c,84 :: 		
0x0148	0xD7FD      	BRA         L_I2C1_Rd16
L_I2C1_Rd17:
;__Lib_I2C_c34b12.c,86 :: 		
0x014A	0xF000C001  	MOVFF       R1, R0
;__Lib_I2C_c34b12.c,87 :: 		
L_end_I2C1_Rd:
0x014E	0x0012      	RETURN      0
; end of _I2C1_Rd
_I2C1_Repeated_Start:
;__Lib_I2C_c34b12.c,59 :: 		
;__Lib_I2C_c34b12.c,60 :: 		
0x0150	0x82C5      	BSF         SSP1CON2, 1 
;__Lib_I2C_c34b12.c,61 :: 		
L_I2C1_Repeated_Start10:
0x0152	0xA2C5      	BTFSS       SSP1CON2, 1 
0x0154	0xD001      	BRA         L_I2C1_Repeated_Start11
;__Lib_I2C_c34b12.c,62 :: 		
0x0156	0xD7FD      	BRA         L_I2C1_Repeated_Start10
L_I2C1_Repeated_Start11:
;__Lib_I2C_c34b12.c,63 :: 		
L_end_I2C1_Repeated_Start:
0x0158	0x0012      	RETURN      0
; end of _I2C1_Repeated_Start
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,43 :: 		
;__Lib_PWM_c21.c,47 :: 		
0x015A	0x50BB      	MOVF        PR2, 0 
0x015C	0x0F01      	ADDLW       1
0x015E	0x6E00      	MOVWF       R0 
0x0160	0x6A01      	CLRF        R1 
0x0162	0x0E00      	MOVLW       0
0x0164	0x2201      	ADDWFC      R1, 1 
0x0166	0xF004C031  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x016A	0x0E00      	MOVLW       0
0x016C	0x6E05      	MOVWF       R5 
0x016E	0xDFA4      	RCALL       _Mul_16x16_U
0x0170	0x0E06      	MOVLW       6
0x0172	0x6E02      	MOVWF       R2 
0x0174	0xF004C000  	MOVFF       R0, R4
0x0178	0xF005C001  	MOVFF       R1, R5
0x017C	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty10:
0x017E	0xE005      	BZ          L__PWM1_Set_Duty11
0x0180	0x3205      	RRCF        R5, 1 
0x0182	0x3204      	RRCF        R4, 1 
0x0184	0x9E05      	BCF         R5, 7 
0x0186	0x0FFF      	ADDLW       255
0x0188	0xD7FA      	BRA         L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,48 :: 		
0x018A	0x0E04      	MOVLW       4
0x018C	0x6E01      	MOVWF       R1 
0x018E	0xF000C004  	MOVFF       R4, R0
0x0192	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty12:
0x0194	0xE004      	BZ          L__PWM1_Set_Duty13
0x0196	0x3600      	RLCF        R0, 1 
0x0198	0x9000      	BCF         R0, 0 
0x019A	0x0FFF      	ADDLW       255
0x019C	0xD7FB      	BRA         L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x019E	0x0E30      	MOVLW       48
0x01A0	0x1400      	ANDWF       R0, 0 
0x01A2	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,49 :: 		
0x01A4	0xF000C004  	MOVFF       R4, R0
0x01A8	0xF001C005  	MOVFF       R5, R1
0x01AC	0x3201      	RRCF        R1, 1 
0x01AE	0x3200      	RRCF        R0, 1 
0x01B0	0x9E01      	BCF         R1, 7 
0x01B2	0x3201      	RRCF        R1, 1 
0x01B4	0x3200      	RRCF        R0, 1 
0x01B6	0x9E01      	BCF         R1, 7 
0x01B8	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,50 :: 		
0x01BC	0x0E0F      	MOVLW       15
0x01BE	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
0x01C0	0x5003      	MOVF        R3, 0 
0x01C2	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,52 :: 		
L_end_PWM1_Set_Duty:
0x01C4	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x01C6	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x01C8	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x01CC	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x01CE	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x01D0	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x01D2	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x01D4	0x0012      	RETURN      0
; end of ___CC2DW
_initMain:
;analogClock.c,48 :: 		void initMain() {
;analogClock.c,50 :: 		ANSELA = 0;                         // Configure AN pins as digital
0x01D6	0x010F      	MOVLB       15
0x01D8	0x6B38      	CLRF        ANSELA, 1
;analogClock.c,51 :: 		ANSELB = 0;
0x01DA	0x6B39      	CLRF        ANSELB, 1
;analogClock.c,52 :: 		ANSELC = 0;
0x01DC	0x6B3A      	CLRF        ANSELC, 1
;analogClock.c,54 :: 		C1ON_bit = 0;                       // To turn off comparators
0x01DE	0x9E79      	BCF         C1ON_bit, BitPos(C1ON_bit+0) 
;analogClock.c,55 :: 		ADCON1 = 0x06;                      // To turn off ADCs
0x01E0	0x0E06      	MOVLW       6
0x01E2	0x6EC1      	MOVWF       ADCON1 
;analogClock.c,57 :: 		PORTA = 255;
0x01E4	0x0EFF      	MOVLW       255
0x01E6	0x6E80      	MOVWF       PORTA 
;analogClock.c,58 :: 		TRISA = 255;                        // configure PORTA pins as input
0x01E8	0x0EFF      	MOVLW       255
0x01EA	0x6E92      	MOVWF       TRISA 
;analogClock.c,59 :: 		LATC  = 0;                          // set PORTC to 0
0x01EC	0x6A8B      	CLRF        LATC 
;analogClock.c,60 :: 		TRISC = 0;                          // designate PORTC pins as output
0x01EE	0x6A94      	CLRF        TRISC 
;analogClock.c,61 :: 		PWM1_Init(5000);                    // initialize PWM1 module at 5KHz
0x01F0	0x80BA      	BSF         T2CON, 0, 0
0x01F2	0x82BA      	BSF         T2CON, 1, 0
0x01F4	0x0E63      	MOVLW       99
0x01F6	0x6EBB      	MOVWF       PR2, 0
0x01F8	0xDF4F      	RCALL       _PWM1_Init
;analogClock.c,62 :: 		PWM2_Init(5000);                    // initialize PWM2 module at 5KHz
0x01FA	0x80BA      	BSF         T2CON, 0, 0
0x01FC	0x82BA      	BSF         T2CON, 1, 0
0x01FE	0x0E63      	MOVLW       99
0x0200	0x6EBB      	MOVWF       PR2, 0
0x0202	0xDF82      	RCALL       _PWM2_Init
;analogClock.c,63 :: 		I2C1_Init(100000);                  // initialize I2C
0x0204	0x0E50      	MOVLW       80
0x0206	0x6EC8      	MOVWF       SSP1ADD 
0x0208	0xDF83      	RCALL       _I2C1_Init
;analogClock.c,66 :: 		writeRTC(7, 0x10);                  //initialize 1PPS output
0x020A	0x0E07      	MOVLW       7
0x020C	0x6E33      	MOVWF       FARG_writeRTC_address 
0x020E	0x0E10      	MOVLW       16
0x0210	0x6E34      	MOVWF       FARG_writeRTC_w_data 
0x0212	0xDF46      	RCALL       _writeRTC
;analogClock.c,68 :: 		}
L_end_initMain:
0x0214	0x0012      	RETURN      0
; end of _initMain
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x0216	0x50BB      	MOVF        PR2, 0 
0x0218	0x0F01      	ADDLW       1
0x021A	0x6E00      	MOVWF       R0 
0x021C	0x6A01      	CLRF        R1 
0x021E	0x0E00      	MOVLW       0
0x0220	0x2201      	ADDWFC      R1, 1 
0x0222	0xF004C031  	MOVFF       FARG_PWM2_Set_Duty_new_duty, R4
0x0226	0x0E00      	MOVLW       0
0x0228	0x6E05      	MOVWF       R5 
0x022A	0xDF46      	RCALL       _Mul_16x16_U
0x022C	0x0E06      	MOVLW       6
0x022E	0x6E02      	MOVWF       R2 
0x0230	0xF004C000  	MOVFF       R0, R4
0x0234	0xF005C001  	MOVFF       R1, R5
0x0238	0x5002      	MOVF        R2, 0 
L__PWM2_Set_Duty2:
0x023A	0xE005      	BZ          L__PWM2_Set_Duty3
0x023C	0x3205      	RRCF        R5, 1 
0x023E	0x3204      	RRCF        R4, 1 
0x0240	0x9E05      	BCF         R5, 7 
0x0242	0x0FFF      	ADDLW       255
0x0244	0xD7FA      	BRA         L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
;__Lib_PWM_c21.c,13 :: 		
0x0246	0x0E04      	MOVLW       4
0x0248	0x6E01      	MOVWF       R1 
0x024A	0xF000C004  	MOVFF       R4, R0
0x024E	0x5001      	MOVF        R1, 0 
L__PWM2_Set_Duty4:
0x0250	0xE004      	BZ          L__PWM2_Set_Duty5
0x0252	0x3600      	RLCF        R0, 1 
0x0254	0x9000      	BCF         R0, 0 
0x0256	0x0FFF      	ADDLW       255
0x0258	0xD7FB      	BRA         L__PWM2_Set_Duty4
L__PWM2_Set_Duty5:
0x025A	0x0E30      	MOVLW       48
0x025C	0x1400      	ANDWF       R0, 0 
0x025E	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,14 :: 		
0x0260	0xF000C004  	MOVFF       R4, R0
0x0264	0xF001C005  	MOVFF       R5, R1
0x0268	0x3201      	RRCF        R1, 1 
0x026A	0x3200      	RRCF        R0, 1 
0x026C	0x9E01      	BCF         R1, 7 
0x026E	0x3201      	RRCF        R1, 1 
0x0270	0x3200      	RRCF        R0, 1 
0x0272	0x9E01      	BCF         R1, 7 
0x0274	0xFF67C000  	MOVFF       R0, CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x0278	0x0E0F      	MOVLW       15
0x027A	0x1666      	ANDWF       CCP2CON, 1 
;__Lib_PWM_c21.c,16 :: 		
0x027C	0x5003      	MOVF        R3, 0 
0x027E	0x1266      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,17 :: 		
L_end_PWM2_Set_Duty:
0x0280	0x0012      	RETURN      0
; end of _PWM2_Set_Duty
_readRTC:
;analogClock.c,22 :: 		unsigned short readRTC(unsigned short address){
;analogClock.c,26 :: 		I2C1_Start();
0x0282	0xDEEC      	RCALL       _I2C1_Start
;analogClock.c,27 :: 		I2C1_Wr(0xD0);                      //address 0x68 followed by direction bit (0 for write, 1 for read) 0x68 followed by 0 --> 0xD0
0x0284	0x0ED0      	MOVLW       208
0x0286	0x6E37      	MOVWF       FARG_I2C1_Wr_data_ 
0x0288	0xDED8      	RCALL       _I2C1_Wr
;analogClock.c,28 :: 		I2C1_Wr(address);
0x028A	0xF037C031  	MOVFF       FARG_readRTC_address, FARG_I2C1_Wr_data_
0x028E	0xDED5      	RCALL       _I2C1_Wr
;analogClock.c,29 :: 		I2C1_Repeated_Start();
0x0290	0xDF5F      	RCALL       _I2C1_Repeated_Start
;analogClock.c,30 :: 		I2C1_Wr(0xD1);                      //0x68 followed by 1 --> 0xD1
0x0292	0x0ED1      	MOVLW       209
0x0294	0x6E37      	MOVWF       FARG_I2C1_Wr_data_ 
0x0296	0xDED1      	RCALL       _I2C1_Wr
;analogClock.c,31 :: 		r_data=I2C1_Rd(0);
0x0298	0x6A33      	CLRF        FARG_I2C1_Rd_ack 
0x029A	0xDF45      	RCALL       _I2C1_Rd
0x029C	0xF032C000  	MOVFF       R0, readRTC_r_data_L0
;analogClock.c,32 :: 		I2C1_Stop();
0x02A0	0xDECA      	RCALL       _I2C1_Stop
;analogClock.c,33 :: 		return(r_data);
0x02A2	0xF000C032  	MOVFF       readRTC_r_data_L0, R0
;analogClock.c,34 :: 		}
L_end_readRTC:
0x02A6	0x0012      	RETURN      0
; end of _readRTC
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x02A8	0x9294      	BCF         TRISC1_bit, BitPos(TRISC1_bit+0) 
;__Lib_PWM_c21.c,21 :: 		
0x02AA	0x84BA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,22 :: 		
0x02AC	0x0E0C      	MOVLW       12
0x02AE	0x1266      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,23 :: 		
L_end_PWM2_Start:
0x02B0	0x0012      	RETURN      0
; end of _PWM2_Start
_PWM1_Start:
;__Lib_PWM_c21.c,54 :: 		
;__Lib_PWM_c21.c,55 :: 		
0x02B2	0x9494      	BCF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;__Lib_PWM_c21.c,56 :: 		
0x02B4	0x84BA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,57 :: 		
0x02B6	0x0E0C      	MOVLW       12
0x02B8	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,58 :: 		
L_end_PWM1_Start:
0x02BA	0x0012      	RETURN      0
; end of _PWM1_Start
_main:
0x02BC	0x6A15      	CLRF        _dutyArrayInd 
0x02BE	0x6A16      	CLRF        22 
0x02C0	0x0E0C      	MOVLW       12
0x02C2	0x6E17      	MOVWF       _dutyArray 
0x02C4	0x6A18      	CLRF        24 
0x02C6	0x0E15      	MOVLW       21
0x02C8	0x6E19      	MOVWF       25 
0x02CA	0x6A1A      	CLRF        26 
0x02CC	0x0E20      	MOVLW       32
0x02CE	0x6E1B      	MOVWF       27 
0x02D0	0x6A1C      	CLRF        28 
0x02D2	0x0E2B      	MOVLW       43
0x02D4	0x6E1D      	MOVWF       29 
0x02D6	0x6A1E      	CLRF        30 
0x02D8	0x0E35      	MOVLW       53
0x02DA	0x6E1F      	MOVWF       31 
0x02DC	0x6A20      	CLRF        32 
;analogClock.c,71 :: 		void main() {
;analogClock.c,73 :: 		initMain();                         // start services
0x02DE	0xDF7B      	RCALL       _initMain
;analogClock.c,75 :: 		current_duty  = 0;                  // initial value for current_duty
0x02E0	0x6A27      	CLRF        _current_duty 
;analogClock.c,76 :: 		current_duty1 = 0;                  // initial value for current_duty1
0x02E2	0x6A28      	CLRF        _current_duty1 
;analogClock.c,78 :: 		PWM1_Start();                       // start PWM1
0x02E4	0xDFE6      	RCALL       _PWM1_Start
;analogClock.c,79 :: 		PWM2_Start();                       // start PWM2
0x02E6	0xDFE0      	RCALL       _PWM2_Start
;analogClock.c,80 :: 		PWM1_Set_Duty(current_duty);        // Set current duty for PWM1
0x02E8	0xF031C027  	MOVFF       _current_duty, FARG_PWM1_Set_Duty_new_duty
0x02EC	0xDF36      	RCALL       _PWM1_Set_Duty
;analogClock.c,81 :: 		PWM2_Set_Duty(current_duty1);       // Set current duty for PWM2
0x02EE	0xF031C028  	MOVFF       _current_duty1, FARG_PWM2_Set_Duty_new_duty
0x02F2	0xDF91      	RCALL       _PWM2_Set_Duty
;analogClock.c,83 :: 		while (1) {                         // endless loop
L_main0:
;analogClock.c,85 :: 		sec = readRTC(0);
0x02F4	0x6A31      	CLRF        FARG_readRTC_address 
0x02F6	0xDFC5      	RCALL       _readRTC
0x02F8	0xF025C000  	MOVFF       R0, _sec
0x02FC	0x0E00      	MOVLW       0
0x02FE	0x6E26      	MOVWF       _sec+1 
;analogClock.c,86 :: 		min1 = readRTC(1);
0x0300	0x0E01      	MOVLW       1
0x0302	0x6E31      	MOVWF       FARG_readRTC_address 
0x0304	0xDFBE      	RCALL       _readRTC
0x0306	0xF021C000  	MOVFF       R0, _min1
0x030A	0x0E00      	MOVLW       0
0x030C	0x6E22      	MOVWF       _min1+1 
;analogClock.c,87 :: 		hr = readRTC(2);
0x030E	0x0E02      	MOVLW       2
0x0310	0x6E31      	MOVWF       FARG_readRTC_address 
0x0312	0xDFB7      	RCALL       _readRTC
0x0314	0xF023C000  	MOVFF       R0, _hr
0x0318	0x0E00      	MOVLW       0
0x031A	0x6E24      	MOVWF       _hr+1 
;analogClock.c,88 :: 		wDay = readRTC(3);
0x031C	0x0E03      	MOVLW       3
0x031E	0x6E31      	MOVWF       FARG_readRTC_address 
0x0320	0xDFB0      	RCALL       _readRTC
0x0322	0xF029C000  	MOVFF       R0, _wDay
0x0326	0x0E00      	MOVLW       0
0x0328	0x6E2A      	MOVWF       _wDay+1 
;analogClock.c,89 :: 		day = readRTC(4);
0x032A	0x0E04      	MOVLW       4
0x032C	0x6E31      	MOVWF       FARG_readRTC_address 
0x032E	0xDFA9      	RCALL       _readRTC
0x0330	0xF02DC000  	MOVFF       R0, _day
0x0334	0x0E00      	MOVLW       0
0x0336	0x6E2E      	MOVWF       _day+1 
;analogClock.c,90 :: 		month = readRTC(5);
0x0338	0x0E05      	MOVLW       5
0x033A	0x6E31      	MOVWF       FARG_readRTC_address 
0x033C	0xDFA2      	RCALL       _readRTC
0x033E	0xF02FC000  	MOVFF       R0, _month
0x0342	0x0E00      	MOVLW       0
0x0344	0x6E30      	MOVWF       _month+1 
;analogClock.c,91 :: 		year = readRTC(6);
0x0346	0x0E06      	MOVLW       6
0x0348	0x6E31      	MOVWF       FARG_readRTC_address 
0x034A	0xDF9B      	RCALL       _readRTC
0x034C	0xF02BC000  	MOVFF       R0, _year
0x0350	0x0E00      	MOVLW       0
0x0352	0x6E2C      	MOVWF       _year+1 
;analogClock.c,107 :: 		if (RA0_bit) {                      // button on RA0 pressed
0x0354	0xA080      	BTFSS       RA0_bit, BitPos(RA0_bit+0) 
0x0356	0xD011      	BRA         L_main2
;analogClock.c,108 :: 		Delay_ms(40);
0x0358	0x0E02      	MOVLW       2
0x035A	0x6E0B      	MOVWF       R11, 0
0x035C	0x0EA0      	MOVLW       160
0x035E	0x6E0C      	MOVWF       R12, 0
0x0360	0x0E92      	MOVLW       146
0x0362	0x6E0D      	MOVWF       R13, 0
L_main3:
0x0364	0x2E0D      	DECFSZ      R13, 1, 0
0x0366	0xD7FE      	BRA         L_main3
0x0368	0x2E0C      	DECFSZ      R12, 1, 0
0x036A	0xD7FC      	BRA         L_main3
0x036C	0x2E0B      	DECFSZ      R11, 1, 0
0x036E	0xD7FA      	BRA         L_main3
0x0370	0x0000      	NOP
;analogClock.c,109 :: 		current_duty++;                  // increment current_duty
0x0372	0x2A27      	INCF        _current_duty, 1 
;analogClock.c,110 :: 		PWM1_Set_Duty(current_duty);
0x0374	0xF031C027  	MOVFF       _current_duty, FARG_PWM1_Set_Duty_new_duty
0x0378	0xDEF0      	RCALL       _PWM1_Set_Duty
;analogClock.c,111 :: 		}
L_main2:
;analogClock.c,113 :: 		if (RA1_bit) {                      // button on RA1 pressed
0x037A	0xA280      	BTFSS       RA1_bit, BitPos(RA1_bit+0) 
0x037C	0xD011      	BRA         L_main4
;analogClock.c,114 :: 		Delay_ms(40);
0x037E	0x0E02      	MOVLW       2
0x0380	0x6E0B      	MOVWF       R11, 0
0x0382	0x0EA0      	MOVLW       160
0x0384	0x6E0C      	MOVWF       R12, 0
0x0386	0x0E92      	MOVLW       146
0x0388	0x6E0D      	MOVWF       R13, 0
L_main5:
0x038A	0x2E0D      	DECFSZ      R13, 1, 0
0x038C	0xD7FE      	BRA         L_main5
0x038E	0x2E0C      	DECFSZ      R12, 1, 0
0x0390	0xD7FC      	BRA         L_main5
0x0392	0x2E0B      	DECFSZ      R11, 1, 0
0x0394	0xD7FA      	BRA         L_main5
0x0396	0x0000      	NOP
;analogClock.c,115 :: 		current_duty--;                  // decrement current_duty
0x0398	0x0627      	DECF        _current_duty, 1 
;analogClock.c,116 :: 		PWM1_Set_Duty(current_duty);
0x039A	0xF031C027  	MOVFF       _current_duty, FARG_PWM1_Set_Duty_new_duty
0x039E	0xDEDD      	RCALL       _PWM1_Set_Duty
;analogClock.c,117 :: 		}
L_main4:
;analogClock.c,119 :: 		if (RA2_bit) {                      // button on RA2 pressed
0x03A0	0xA480      	BTFSS       RA2_bit, BitPos(RA2_bit+0) 
0x03A2	0xD01F      	BRA         L_main6
;analogClock.c,120 :: 		Delay_ms(40);
0x03A4	0x0E02      	MOVLW       2
0x03A6	0x6E0B      	MOVWF       R11, 0
0x03A8	0x0EA0      	MOVLW       160
0x03AA	0x6E0C      	MOVWF       R12, 0
0x03AC	0x0E92      	MOVLW       146
0x03AE	0x6E0D      	MOVWF       R13, 0
L_main7:
0x03B0	0x2E0D      	DECFSZ      R13, 1, 0
0x03B2	0xD7FE      	BRA         L_main7
0x03B4	0x2E0C      	DECFSZ      R12, 1, 0
0x03B6	0xD7FC      	BRA         L_main7
0x03B8	0x2E0B      	DECFSZ      R11, 1, 0
0x03BA	0xD7FA      	BRA         L_main7
0x03BC	0x0000      	NOP
;analogClock.c,121 :: 		dutyArrayInd++;                  // increment current_duty1
0x03BE	0x4A15      	INFSNZ      _dutyArrayInd, 1 
0x03C0	0x2A16      	INCF        _dutyArrayInd+1, 1 
;analogClock.c,122 :: 		PWM2_Set_Duty(dutyArray[dutyArrayInd]);
0x03C2	0xF000C015  	MOVFF       _dutyArrayInd, R0
0x03C6	0xF001C016  	MOVFF       _dutyArrayInd+1, R1
0x03CA	0x3600      	RLCF        R0, 1 
0x03CC	0x9000      	BCF         R0, 0 
0x03CE	0x3601      	RLCF        R1, 1 
0x03D0	0x0E17      	MOVLW       _dutyArray
0x03D2	0x2400      	ADDWF       R0, 0 
0x03D4	0x6EE9      	MOVWF       FSR0L 
0x03D6	0x0E00      	MOVLW       hi_addr(_dutyArray)
0x03D8	0x2001      	ADDWFC      R1, 0 
0x03DA	0x6EEA      	MOVWF       FSR0H 
0x03DC	0xF031CFEE  	MOVFF       POSTINC0, FARG_PWM2_Set_Duty_new_duty
0x03E0	0xDF1A      	RCALL       _PWM2_Set_Duty
;analogClock.c,123 :: 		}
L_main6:
;analogClock.c,125 :: 		if (RA3_bit) {                      // button on RA3 pressed
0x03E2	0xA680      	BTFSS       RA3_bit, BitPos(RA3_bit+0) 
0x03E4	0xD021      	BRA         L_main8
;analogClock.c,126 :: 		Delay_ms(40);
0x03E6	0x0E02      	MOVLW       2
0x03E8	0x6E0B      	MOVWF       R11, 0
0x03EA	0x0EA0      	MOVLW       160
0x03EC	0x6E0C      	MOVWF       R12, 0
0x03EE	0x0E92      	MOVLW       146
0x03F0	0x6E0D      	MOVWF       R13, 0
L_main9:
0x03F2	0x2E0D      	DECFSZ      R13, 1, 0
0x03F4	0xD7FE      	BRA         L_main9
0x03F6	0x2E0C      	DECFSZ      R12, 1, 0
0x03F8	0xD7FC      	BRA         L_main9
0x03FA	0x2E0B      	DECFSZ      R11, 1, 0
0x03FC	0xD7FA      	BRA         L_main9
0x03FE	0x0000      	NOP
;analogClock.c,127 :: 		dutyArrayInd--;                  // decrement current_duty1
0x0400	0x0E01      	MOVLW       1
0x0402	0x5E15      	SUBWF       _dutyArrayInd, 1 
0x0404	0x0E00      	MOVLW       0
0x0406	0x5A16      	SUBWFB      _dutyArrayInd+1, 1 
;analogClock.c,128 :: 		PWM2_Set_Duty(dutyArray[dutyArrayInd]);
0x0408	0xF000C015  	MOVFF       _dutyArrayInd, R0
0x040C	0xF001C016  	MOVFF       _dutyArrayInd+1, R1
0x0410	0x3600      	RLCF        R0, 1 
0x0412	0x9000      	BCF         R0, 0 
0x0414	0x3601      	RLCF        R1, 1 
0x0416	0x0E17      	MOVLW       _dutyArray
0x0418	0x2400      	ADDWF       R0, 0 
0x041A	0x6EE9      	MOVWF       FSR0L 
0x041C	0x0E00      	MOVLW       hi_addr(_dutyArray)
0x041E	0x2001      	ADDWFC      R1, 0 
0x0420	0x6EEA      	MOVWF       FSR0H 
0x0422	0xF031CFEE  	MOVFF       POSTINC0, FARG_PWM2_Set_Duty_new_duty
0x0426	0xDEF7      	RCALL       _PWM2_Set_Duty
;analogClock.c,129 :: 		}
L_main8:
;analogClock.c,131 :: 		Delay_ms(10);                     // generic wait
0x0428	0x0E68      	MOVLW       104
0x042A	0x6E0C      	MOVWF       R12, 0
0x042C	0x0EE4      	MOVLW       228
0x042E	0x6E0D      	MOVWF       R13, 0
L_main10:
0x0430	0x2E0D      	DECFSZ      R13, 1, 0
0x0432	0xD7FE      	BRA         L_main10
0x0434	0x2E0C      	DECFSZ      R12, 1, 0
0x0436	0xD7FC      	BRA         L_main10
0x0438	0x0000      	NOP
;analogClock.c,132 :: 		}
0x043A	0xD75C      	BRA         L_main0
;analogClock.c,133 :: 		}
L_end_main:
0x043C	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [26]    _I2C1_Is_Idle
0x0036       [4]    _I2C1_Stop
0x003A      [34]    _I2C1_Wr
0x005C      [60]    _I2C1_Start
0x0098       [8]    _PWM1_Init
0x00A0      [24]    _writeRTC
0x00B8      [80]    _Mul_16x16_U
0x0108       [8]    _PWM2_Init
0x0110      [22]    _I2C1_Init
0x0126      [42]    _I2C1_Rd
0x0150      [10]    _I2C1_Repeated_Start
0x015A     [108]    _PWM1_Set_Duty
0x01C6      [16]    ___CC2DW
0x01D6      [64]    _initMain
0x0216     [108]    _PWM2_Set_Duty
0x0282      [38]    _readRTC
0x02A8      [10]    _PWM2_Start
0x02B2      [10]    _PWM1_Start
0x02BC     [386]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    R0
0x0000       [1]    UART2_Init_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    SPI2_Write_tmp_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    I2C2_Rd_tmp_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    UART2_Read___tmp_UART2_Read_L0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0004       [1]    R4
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _dutyArrayInd
0x0017      [10]    _dutyArray
0x0021       [2]    _min1
0x0023       [2]    _hr
0x0025       [2]    _sec
0x0027       [1]    _current_duty
0x0028       [1]    _current_duty1
0x0029       [2]    _wDay
0x002B       [2]    _year
0x002D       [2]    _day
0x002F       [2]    _month
0x0031       [1]    FARG_readRTC_address
0x0031       [1]    FARG_PWM1_Set_Duty_new_duty
0x0031       [1]    FARG_PWM2_Set_Duty_new_duty
0x0032       [1]    readRTC_r_data_L0
0x0033       [4]    FARG_PWM1_Init_PWM_Freq
0x0033       [1]    FARG_writeRTC_address
0x0033       [4]    FARG_PWM2_Init_PWM_Freq
0x0033       [1]    FARG_I2C1_Rd_ack
0x0033       [4]    FARG_I2C1_Init_clock
0x0034       [1]    FARG_writeRTC_w_data
0x0037       [1]    FARG_I2C1_Wr_data_
0x0037       [2]    I2C1_Start_j_L0
0x0F38       [1]    ANSELA
0x0F39       [1]    ANSELB
0x0F3A       [1]    ANSELC
0x0F66       [1]    CCP2CON
0x0F67       [1]    CCPR2L
0x0F79       [0]    C1ON_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA1_bit
0x0F80       [1]    PORTA
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA2_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC4_bit
0x0F92       [1]    TRISA
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC4_bit
0x0F9E       [1]    PIR1
0x0FBA       [1]    T2CON
0x0FBB       [1]    PR2
0x0FBD       [1]    CCP1CON
0x0FBE       [1]    CCPR1L
0x0FC1       [1]    ADCON1
0x0FC5       [1]    SSP1CON2
0x0FC6       [1]    SSP1CON1
0x0FC7       [1]    SSPSTAT
0x0FC7       [1]    SSP1STAT
0x0FC8       [1]    SSP1ADD
0x0FC9       [1]    SSP1BUF
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_end_readRTC
  _readRTC
  L_end_writeRTC
  _writeRTC
  L_end_initMain
  _initMain
  L_end_main
  _main
  L_I2C1_Is_Idle0
  L_I2C1_Is_Idle1
  L_I2C1_Start2
  L_I2C1_Start3
  L_I2C1_Start4
  L_I2C1_Start5
  L_I2C1_Start6
  L_I2C1_Start7
  L_I2C1_Start8
  L_I2C1_Start9
  L_I2C1_Repeated_Start10
  L_I2C1_Repeated_Start11
  L_I2C1_Rd12
  L_I2C1_Rd13
  L_I2C1_Rd14
  L_I2C1_Rd15
  L_I2C1_Rd16
  L_I2C1_Rd17
  L_I2C1_Wr18
  L_I2C1_Wr19
  L_I2C1_Wr20
  L_I2C1_Wr21
  L_I2C1_Wr22
  L_I2C1_Wr23
  L_I2C2_Is_Idle24
  L_I2C2_Is_Idle25
  L_I2C2_Start26
  L_I2C2_Start27
  L_I2C2_Start28
  L_I2C2_Start29
  L_I2C2_Start30
  L_I2C2_Start31
  L_I2C2_Start32
  L_I2C2_Start33
  L_I2C2_Repeated_Start34
  L_I2C2_Repeated_Start35
  L_I2C2_Rd36
  L_I2C2_Rd37
  L_I2C2_Rd38
  L_I2C2_Rd39
  L_I2C2_Rd40
  L_I2C2_Rd41
  L_I2C2_Wr42
  L_I2C2_Wr43
  L_I2C2_Wr44
  L_I2C2_Wr45
  L_I2C2_Wr46
  L_I2C2_Wr47
  L_end_I2C1_Init
  _I2C1_Init
  L_end_I2C1_Is_Idle
  _I2C1_Is_Idle
  L_end_I2C1_Start
  _I2C1_Start
  L__I2C1_Start51
  L__I2C1_Start52
  L_end_I2C1_Repeated_Start
  _I2C1_Repeated_Start
  L_end_I2C1_Rd
  _I2C1_Rd
  L_end_I2C1_Wr
  _I2C1_Wr
  L_end_I2C1_Stop
  _I2C1_Stop
  L_end_I2C2_Init
  _I2C2_Init
  L_end_I2C2_Is_Idle
  _I2C2_Is_Idle
  L_end_I2C2_Start
  _I2C2_Start
  L__I2C2_Start60
  L__I2C2_Start61
  L_end_I2C2_Repeated_Start
  _I2C2_Repeated_Start
  L_end_I2C2_Rd
  _I2C2_Rd
  L_end_I2C2_Wr
  _I2C2_Wr
  L_end_I2C2_Stop
  _I2C2_Stop
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_end_PWM2_Init
  _PWM2_Init
  L_end_PWM2_Set_Duty
  _PWM2_Set_Duty
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  L__PWM2_Set_Duty4
  L__PWM2_Set_Duty5
  L_end_PWM2_Start
  _PWM2_Start
  L_end_PWM2_Stop
  _PWM2_Stop
  L_end_PWM1_Init
  _PWM1_Init
  L_end_PWM1_Set_Duty
  _PWM1_Set_Duty
  L__PWM1_Set_Duty10
  L__PWM1_Set_Duty11
  L__PWM1_Set_Duty12
  L__PWM1_Set_Duty13
  L_end_PWM1_Start
  _PWM1_Start
  L_end_PWM1_Stop
  _PWM1_Stop
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
